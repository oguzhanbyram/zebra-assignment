/* eslint-disable */
export default async () => {
    const t = {
        ["./common/enum/plan-type.enum"]: await import("./common/enum/plan-type.enum"),
        ["./modules/feature-flag/entity/feature-flag.entity"]: await import("./modules/feature-flag/entity/feature-flag.entity"),
        ["./modules/tenant/entity/tenant.entity"]: await import("./modules/tenant/entity/tenant.entity"),
        ["./modules/feature/entity/feature.entity"]: await import("./modules/feature/entity/feature.entity"),
        ["./modules/feature-flag/enum/environment.enum"]: await import("./modules/feature-flag/enum/environment.enum"),
        ["./modules/feature-flag/enum/strategy-type.enum"]: await import("./modules/feature-flag/enum/strategy-type.enum"),
        ["./common/enum/user-role.enum"]: await import("./common/enum/user-role.enum"),
        ["./modules/user/dto/response/user-response.dto"]: await import("./modules/user/dto/response/user-response.dto"),
        ["./modules/feature/dto/response/feature-response.dto"]: await import("./modules/feature/dto/response/feature-response.dto"),
        ["./modules/tenant/dto/response/tenant-response.dto"]: await import("./modules/tenant/dto/response/tenant-response.dto"),
        ["./modules/auth/dto/response/login-response.dto"]: await import("./modules/auth/dto/response/login-response.dto"),
        ["./modules/feature-flag/dto/response/feature-flag-response.dto"]: await import("./modules/feature-flag/dto/response/feature-flag-response.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./shared/entity/base.entity"), { "BaseEntity": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./modules/tenant/entity/tenant.entity"), { "Tenant": { name: { required: true, type: () => String }, description: { required: true, type: () => String }, plan: { required: true, enum: t["./common/enum/plan-type.enum"].PlanType }, apiKey: { required: true, type: () => String, nullable: true }, featureFlags: { required: true, type: () => [t["./modules/feature-flag/entity/feature-flag.entity"].FeatureFlag] } } }], [import("./modules/feature-flag/entity/feature-flag.entity"), { "FeatureFlag": { tenant: { required: true, type: () => t["./modules/tenant/entity/tenant.entity"].Tenant }, tenantId: { required: true, type: () => String }, feature: { required: true, type: () => t["./modules/feature/entity/feature.entity"].Feature }, featureId: { required: true, type: () => String }, environment: { required: true, enum: t["./modules/feature-flag/enum/environment.enum"].Environment }, enabled: { required: true, type: () => Boolean }, strategy: { required: true, enum: t["./modules/feature-flag/enum/strategy-type.enum"].StrategyType }, value: { required: false, type: () => Object } } }], [import("./modules/feature/entity/feature.entity"), { "Feature": { key: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, featureFlags: { required: true, type: () => [t["./modules/feature-flag/entity/feature-flag.entity"].FeatureFlag] } } }], [import("./modules/feature/dto/request/create-feature.dto"), { "CreateFeatureDto": { key: { required: true, type: () => String }, name: { required: true, type: () => String, maxLength: 255 }, description: { required: false, type: () => String } } }], [import("./modules/feature/dto/request/feature-filter.dto"), { "FeatureFilterDto": { name: { required: false, type: () => String }, key: { required: false, type: () => String } } }], [import("./modules/feature/dto/request/update-feature.dto"), { "UpdateFeatureDto": {} }], [import("./modules/feature/dto/response/feature-response.dto"), { "FeatureResponseDto": { key: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: false, type: () => String }, id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./common/dto/pagination/page.dto"), { "Page": { content: { required: true }, totalElements: { required: true, type: () => Number } } }], [import("./common/dto/pagination/pageable-meta.dto"), { "PageableMeta": { offset: { required: true, type: () => Number }, pageNumber: { required: true, type: () => Number }, pageSize: { required: true, type: () => Number }, unpaged: { required: true, type: () => Boolean }, paged: { required: true, type: () => Boolean } } }], [import("./common/dto/pagination/pageable.dto"), { "Pageable": { page: { required: false, type: () => Number, minimum: 0 }, size: { required: false, type: () => Number, minimum: 1, maximum: 1000 }, sort: { required: false, type: () => String } } }], [import("./common/dto/pagination/sort-meta.dto"), { "SortMeta": { empty: { required: true, type: () => Boolean }, sorted: { required: true, type: () => Boolean }, unsorted: { required: true, type: () => Boolean } } }], [import("./modules/tenant/dto/request/create-tenant.dto"), { "CreateTenantDto": { name: { required: true, type: () => String, minLength: 3, maxLength: 100 }, description: { required: false, type: () => String }, plan: { required: false, enum: t["./common/enum/plan-type.enum"].PlanType } } }], [import("./modules/tenant/dto/request/tenant-filter.dto"), { "TenantFilterDto": { name: { required: false, type: () => String }, plan: { required: false, enum: t["./common/enum/plan-type.enum"].PlanType } } }], [import("./modules/tenant/dto/request/update-tenant.dto"), { "UpdateTenantDto": {} }], [import("./modules/tenant/dto/response/tenant-response.dto"), { "TenantResponseDto": { name: { required: true, type: () => String }, description: { required: false, type: () => String }, plan: { required: true, enum: t["./common/enum/plan-type.enum"].PlanType }, apiKey: { required: false, type: () => String }, id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./modules/user/entity/user.entity"), { "User": { username: { required: true, type: () => String }, password: { required: true, type: () => String }, role: { required: true, enum: t["./common/enum/user-role.enum"].UserRole }, tenant: { required: false, type: () => t["./modules/tenant/entity/tenant.entity"].Tenant }, tenantId: { required: false, type: () => String } } }], [import("./modules/auth/dto/request/login.dto"), { "LoginDto": { username: { required: true, type: () => String, minLength: 3, maxLength: 100 }, password: { required: true, type: () => String, minLength: 6, maxLength: 255 } } }], [import("./modules/user/dto/request/create-user.dto"), { "CreateUserDto": { username: { required: true, type: () => String, minLength: 3, maxLength: 50 }, password: { required: true, type: () => String, minLength: 6, maxLength: 100 }, role: { required: true, enum: t["./common/enum/user-role.enum"].UserRole }, tenantId: { required: false, type: () => String, format: "uuid" } } }], [import("./modules/user/dto/response/user-response.dto"), { "UserResponseDto": { id: { required: true, type: () => String }, username: { required: true, type: () => String }, role: { required: true, enum: t["./common/enum/user-role.enum"].UserRole }, tenantId: { required: false, type: () => String } } }], [import("./modules/auth/dto/response/login-response.dto"), { "LoginResponseDto": { accessToken: { required: true, type: () => String }, user: { required: true, type: () => t["./modules/user/dto/response/user-response.dto"].UserResponseDto } } }], [import("./modules/feature-flag/dto/request/evaluate-feature-flag.dto"), { "EvaluateFeatureFlagDto": { tenant: { required: true, type: () => String }, environment: { required: true, enum: t["./modules/feature-flag/enum/environment.enum"].Environment }, feature: { required: true, type: () => String }, userId: { required: false, type: () => String } } }], [import("./modules/feature-flag/dto/request/feature-flag-filter.dto"), { "FeatureFlagFilterDto": { tenant: { required: false, type: () => String }, env: { required: false, enum: t["./modules/feature-flag/enum/environment.enum"].Environment } } }], [import("./modules/feature-flag/dto/request/upsert-feature-flag.dto"), { "UpsertFeatureFlagDto": { tenantId: { required: true, type: () => String, format: "uuid" }, featureId: { required: true, type: () => String, format: "uuid" }, environment: { required: true, enum: t["./modules/feature-flag/enum/environment.enum"].Environment }, enabled: { required: true, type: () => Boolean }, strategy: { required: true, enum: t["./modules/feature-flag/enum/strategy-type.enum"].StrategyType }, value: { required: false, type: () => Object } } }], [import("./modules/feature-flag/dto/response/feature-flag-response.dto"), { "FeatureFlagResponseDto": { id: { required: true, type: () => String }, tenantId: { required: true, type: () => String }, tenantName: { required: true, type: () => String }, featureId: { required: true, type: () => String }, featureKey: { required: true, type: () => String }, environment: { required: true, enum: t["./modules/feature-flag/enum/environment.enum"].Environment }, enabled: { required: true, type: () => Boolean }, strategy: { required: true, enum: t["./modules/feature-flag/enum/strategy-type.enum"].StrategyType }, value: { required: false, type: () => Object } } }]], "controllers": [[import("./modules/feature/feature.controller"), { "FeatureController": { "findAll": {}, "find": { type: t["./modules/feature/dto/response/feature-response.dto"].FeatureResponseDto }, "create": { type: t["./modules/feature/dto/response/feature-response.dto"].FeatureResponseDto }, "update": { type: t["./modules/feature/dto/response/feature-response.dto"].FeatureResponseDto }, "delete": { type: Boolean } } }], [import("./modules/tenant/tenant.controller"), { "TenantController": { "findAll": {}, "find": { type: t["./modules/tenant/dto/response/tenant-response.dto"].TenantResponseDto }, "create": { type: t["./modules/tenant/dto/response/tenant-response.dto"].TenantResponseDto }, "update": { type: t["./modules/tenant/dto/response/tenant-response.dto"].TenantResponseDto }, "delete": { type: Boolean } } }], [import("./modules/auth/auth.controller"), { "AuthController": { "login": { type: t["./modules/auth/dto/response/login-response.dto"].LoginResponseDto } } }], [import("./modules/feature-flag/feature-flag.controller"), { "FeatureFlagController": { "findAll": {}, "upsert": { type: t["./modules/feature-flag/dto/response/feature-flag-response.dto"].FeatureFlagResponseDto }, "evaluate": {}, "delete": { type: Boolean } } }]] } };
};